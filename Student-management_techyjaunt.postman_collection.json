{
	"info": {
		"_postman_id": "d8caf21f-51da-4f95-bf7f-5a5e2bc0c09b",
		"name": "Student-management_techyjaunt",
		"description": "This collection is a dcumentation of my API endpoints. It can be customised and reused.",
		"schema": "https://schema.getpostman.com/json/collection/v2.1.0/collection.json",
		"_exporter_id": "45089676"
	},
	"item": [
		{
			"name": "Register a new student",
			"request": {
				"method": "POST",
				"header": [],
				"body": {
					"mode": "raw",
					"raw": "{\r\n      \"firstName\": \"Christianah\",\r\n      \"lastName\": \"Adeboye\",\r\n      \"age\": 27,\r\n      \"course\": \"Biochemistry\",\r\n      \"level\": 300,\r\n      \"email\": \"christianaha20@gmail.com\"\r\n}",
					"options": {
						"raw": {
							"language": "json"
						}
					}
				},
				"url": {
					"raw": "http://localhost:3000/api/students/register",
					"protocol": "http",
					"host": [
						"localhost"
					],
					"port": "3000",
					"path": [
						"api",
						"students",
						"register"
					]
				},
				"description": "This endpoint allows a new student to be registered itno the system. It requires information like: First name, last name, email, age, course and level of the new intake."
			},
			"response": []
		},
		{
			"name": "Get all students",
			"request": {
				"method": "GET",
				"header": [],
				"url": {
					"raw": "http://localhost:3000/api/students",
					"protocol": "http",
					"host": [
						"localhost"
					],
					"port": "3000",
					"path": [
						"api",
						"students"
					]
				},
				"description": "This endpoint gets the details of all the students that were registered successfully at once."
			},
			"response": []
		},
		{
			"name": "Get students by Id",
			"request": {
				"method": "GET",
				"header": [],
				"url": {
					"raw": "http://localhost:3000/api/students/get-students/685a9bba9f29b970259b2a",
					"protocol": "http",
					"host": [
						"localhost"
					],
					"port": "3000",
					"path": [
						"api",
						"students",
						"get-students",
						"685a9bba9f29b970259b2a"
					]
				},
				"description": "This endpoint fetches the details od individual students based on their unique id generated by Mongoose"
			},
			"response": []
		},
		{
			"name": "Search student by first name, last name or email",
			"request": {
				"method": "GET",
				"header": [],
				"url": {
					"raw": "http://localhost:3000/api/students/search-students?query=ayomide",
					"protocol": "http",
					"host": [
						"localhost"
					],
					"port": "3000",
					"path": [
						"api",
						"students",
						"search-students"
					],
					"query": [
						{
							"key": "query",
							"value": "ayomide"
						}
					]
				},
				"description": "This allows the user to search for a particular student using either their first name, last name or their unique email address. It is case insensitive."
			},
			"response": []
		},
		{
			"name": "Update student by Id",
			"request": {
				"method": "PUT",
				"header": [],
				"body": {
					"mode": "raw",
					"raw": "{\"firstName\":  \"Christianah\",\r\n            \"lastName\": \"Michaels\",\r\n            \"age\": 21,\r\n            \"course\": \"Biochemistry\",\r\n            \"level\": 300,\r\n            \"email\": \"christianaha20@gmail.com\"}",
					"options": {
						"raw": {
							"language": "json"
						}
					}
				},
				"url": {
					"raw": "http://localhost:3000/api/students/update-students/685e9fcf54e582da46f7e4",
					"protocol": "http",
					"host": [
						"localhost"
					],
					"port": "3000",
					"path": [
						"api",
						"students",
						"update-students",
						"685e9fcf54e582da46f7e4"
					]
				},
				"description": "It allows students details to be updated using the unique Id generated by mongoDB."
			},
			"response": []
		},
		{
			"name": "Delete by Id",
			"request": {
				"method": "DELETE",
				"header": [],
				"url": {
					"raw": "http://localhost:3000/api/students/delete-students/685e9fcf54e582da46f7e4",
					"protocol": "http",
					"host": [
						"localhost"
					],
					"port": "3000",
					"path": [
						"api",
						"students",
						"delete-students",
						"685e9fcf54e582da46f7e4"
					]
				},
				"description": "This allows specific student's details to be easily deleted using te unique Id generated by MongoDB."
			},
			"response": []
		},
		{
			"name": "Count students",
			"request": {
				"method": "GET",
				"header": [],
				"url": {
					"raw": "http://localhost:3000/api/students/count",
					"protocol": "http",
					"host": [
						"localhost"
					],
					"port": "3000",
					"path": [
						"api",
						"students",
						"count"
					]
				},
				"description": "This gives account of the total number of students in the database."
			},
			"response": []
		}
	]
}